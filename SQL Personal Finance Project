--PERSONAL FINANCE PROJECT
/** 
SUMMARY: Created SQL database of nine different financial accounts by gathering available balance history and transaction data. 
Queried the database with 4 different Tableau visualizations in mind. Created a Tableau dashboard that includes;
(1) current positions snapshot table (2) time series of 2 checking account balances per week with forecast 
(3) bar graph of net income, gross income, and spending per month (4) categorial time series area chart of net worth by month. 

Script Contents
SECTION 1: Creating Tables, Importing Data
SECTION 2: Gross Income, Spending, & Net Income by Month (for bar graph)
SECTION 3: Weekly Time Series of Checking Account Balances (for line graph)
SECTION 4: Categorical Time Series of Net Worth (for area graph)
SECTION 5: Present Positions Snapshot (for table)
**/

------------------------------------------
--SECTION 1: Creating Tables, Importing Data
-- GOAL: Create tables of financial assets and liabilities to import financial data (.csv) from nine accounts

	--Spouse 1 Checking Account
	CREATE TABLE spouse1checking (
		"Date" DATE,
		Transaction_Type VARCHAR(250),
		Description VARCHAR(1000),
		Amount NUMERIC, 
		Posted_Balance NUMERIC
		);

	--Spouse 2 Checking Account
	CREATE TABLE Spouse2Checking (
		"Date" DATE,
		Description VARCHAR(1000),
		Withdrawels NUMERIC,
		Deposits NUMERIC,
		Category VARCHAR(1000),
		Balance NUMERIC
		);

	--Student Loans
	CREATE TABLE studentloans (
		"Date" DATE,
		Loan_Balance NUMERIC
		);


	--Savings Account
	CREATE TABLE savingsaccount (
		"Date" DATE,
		Loan_Balance NUMERIC
		);

	--Vanguard Investments
	CREATE TABLE vanguardinvestments (
		"Date" DATE,
		Beginning_Balance NUMERIC,	
		Purchases_Withdraweals	NUMERIC,
		Market_Gain_Loss	NUMERIC,
		Income_Returns	NUMERIC,
		Personal_Investment_Returns	NUMERIC,
		Cumulative_Returns	NUMERIC,
		Ending_Balance NUMERIC
		);

	--Spouse 1 Retirement
	CREATE TABLE spouse1retirement (
		"Date" DATE,
		Loan_Balance NUMERIC
		);

	--Emergency Fund
	CREATE TABLE EmergencyFund (
		"Date" DATE,
		"Transaction" NUMERIC,
		"Type" VARCHAR(250),
		Description VARCHAR(500)
		);

	--Spouse 2 Car Loan
	CREATE TABLE Spouse2CarLoan (
		"Date" DATE,
		"Transaction" NUMERIC,
		"Balance" NUMERIC
		);

	--Spouse 2 Retirement
	CREATE TABLE Spouse2Retirement(
		"Date" DATE,
		Balance NUMERIC
		);
		
------------------------------------------
-- SECTION 2: Gross Income, Spending, & Net Income by Month (for bar graph)
-- GOAL: Create a bar graph in Tableau that shows monthly gross income, spending, and net income of Spouse 1 & Spouse 2 checking accounts

	-- Calculating Income by Month
		
		-- Spouse 1 Income by Month 
		DROP VIEW IF EXISTS spouse1income;
		CREATE VIEW spouse1income AS
		SELECT 
			TO_CHAR("Date", 'mm-yyyy') AS "Date", 
			sum(amount) AS Gross_Income FROM spouse1checking
		WHERE amount > 0 
		GROUP BY TO_CHAR("Date", 'mm-yyyy')
		ORDER BY TO_CHAR("Date", 'mm-yyyy') DESC;

		-- Spouse 2 Income By Month
		DROP VIEW IF EXISTS spouse2income;
		CREATE VIEW spouse2income AS
		SELECT 
			TO_CHAR("Date", 'mm-yyyy') AS "Date",
			SUM(Deposits) AS Gross_Income
		FROM spouse2checking
		GROUP BY TO_CHAR("Date", 'mm-yyyy')
		ORDER BY TO_CHAR("Date", 'mm-yyyy');

	--Calculating Spending by Month
		
		-- Spouse 1 Spending by Month
		DROP VIEW IF EXISTS spouse1spending;
		CREATE VIEW spouse1spending AS
		SELECT 
			TO_CHAR("Date", 'mm-yyyy') AS "Date", 
			sum(amount) AS Total_Spending FROM spouse1checking
		WHERE amount < 0 
		GROUP BY TO_CHAR("Date", 'mm-yyyy')
		ORDER BY TO_CHAR("Date", 'mm-yyyy') DESC;

		-- Spouse 2 Spending by Month
		DROP VIEW IF EXISTS spouse2spending;
		CREATE VIEW spouse2spending AS
		SELECT 
			TO_CHAR("Date", 'mm-yyyy') AS "Date", 
			sum(withdrawels) AS Total_Spending FROM spouse2checking
		GROUP BY TO_CHAR("Date", 'mm-yyyy')
		ORDER BY TO_CHAR("Date", 'mm-yyyy') DESC;

	--- Calculating Net Income by Month
	
		-- Spouse 1 Net Income
		DROP VIEW IF EXISTS spouse1netincome;
		CREATE VIEW spouse1netincome AS
		SELECT 
			TO_CHAR("Date", 'mm-yyyy') AS "Date", 
			SUM(amount) AS Net_Income FROM spouse1checking
		GROUP BY TO_CHAR("Date", 'mm-yyyy');

		-- Spouse 2 Net Income
		DROP VIEW IF EXISTS spouse2netincome;
		CREATE VIEW spouse2netincome AS
		SELECT 
			TO_CHAR("Date", 'mm-yyyy') AS "Date",
			SUM(Deposits) - sum(withdrawels) AS Net_income
		FROM spouse2checking
		GROUP BY TO_CHAR("Date", 'mm-yyyy')
		ORDER BY TO_CHAR("Date", 'mm-yyyy');

	-- Joining section 2 views to create bar graph query
		
		-- EXPORT:
		SELECT 
			spouse1income."Date",
			COALESCE(spouse1income.gross_income,0) + COALESCE(spouse2income.gross_income,0) AS "Gross Income",
			COALESCE(spouse1spending.Total_spending,0) - COALESCE(spouse2spending.total_spending,0) AS "Total Spending", 
			COALESCE(spouse1netincome.net_income,0) + COALESCE(spouse2netincome.net_income,0) AS "Net Income"

		FROM spouse1income

		FULL OUTER JOIN spouse2income
		ON spouse1income."Date"
			= spouse2income."Date"

		FULL OUTER JOIN spouse1spending
		ON spouse1income."Date"
			= spouse1spending."Date"

		FULL OUTER JOIN spouse2spending
		ON spouse1income."Date"
			= spouse2spending."Date"

		FULL OUTER JOIN spouse1netincome
		ON spouse1income."Date"
			= spouse1netincome."Date"

		FULL OUTER JOIN spouse2netincome
		ON spouse1income."Date"
			= spouse2netincome."Date"

		WHERE spouse1income."Date" IS NOT NULL
		ORDER BY TO_DATE(spouse1income."Date",'mm-yyyy');

-----------------------------------------------------
-- Section 3. Weekly Time Series of Checking Account Balances (for line graph)
	-- GOAL: Create a line graph in Teableau that shows the combined balance of Spouse 1 & 2 checking accounts by week
	
	-- Spouse 1 time series of checking transactions
	DROP VIEW IF EXISTS spouse1cumchecking;
	CREATE VIEW spouse1cumchecking AS
	SELECT 
		TO_CHAR("Date", 'ww-yyyy') AS "Week",
		xxxxx + SUM(amount) OVER (ORDER BY "Date") AS "Account Value"
	FROM spouse1checking
	ORDER BY "Date" DESC;
	SELECT * FROM spouse1cumchecking;
	
	--spouse 2 time series of checking transactions
	DROP VIEW IF EXISTS spouse2cumchecking;
	CREATE VIEW spouse2cumchecking AS
	SELECT 
		TO_CHAR("Date", 'ww-yyyy') AS "Week", 
		xxxxx + SUM(COALESCE((0-withdrawels),0)+COALESCE(deposits,0)) OVER (ORDER BY "Date") AS "Account Value"
	FROM spouse2checking
	ORDER BY "Date";
	SELECT * FROM spouse2cumchecking;

	--EXPORT:
	SELECT 
		TO_DATE(spouse1cumchecking."Week", 'ww-yyyy') as "Date",
		ROUND(AVG(spouse1cumchecking."Account Value"),2) +
		COALESCE(ROUND(AVG(spouse2cumchecking."Account Value"),2),xxxxx) AS "Combined Checking"
	FROM spouse2cumchecking

	FULL OUTER JOIN spouse1cumchecking
		ON  TO_DATE(spouse1cumchecking."Week", 'ww-yyyy') = TO_DATE(spouse2cumchecking."Week", 'ww-yyyy')

	GROUP BY spouse1cumchecking."Week"
	ORDER BY TO_DATE(spouse1cumchecking."Week", 'ww-yyyy');

------------------------------------------
-- SECTION 4 Categorical Time Series of Net Worth (for area graph)--
	-- GOAL: Create an area graph in Tableau that shows the unique contribution of all assets and liabilities to networth by month --
	
	-- Creating an Emergency Fund View to more easily join to net worth query
	DROP VIEW IF EXISTS EmergencyFundBalance;
	CREATE VIEW EmergencyFundBalance AS
	SELECT 
		TO_CHAR("Date", 'mm-yyyy') AS "Date", 
		SUM("Transaction") OVER (ORDER BY "Date") AS Balance
	FROM emergencyfund
	ORDER BY "Date";
	
	-- EXPPORT:
	SELECT 
		TO_DATE(TO_CHAR(spouse1checking."Date", 'mm-yyyy'),'mm-yyyy') AS "Month", 
		ROUND(AVG(posted_balance),2) AS "Spouse 1 Checking Balance",
		COALESCE(MAX(spouse2checking.balance),0) AS "Spouse 2 Checking",
		MAX(savingsaccount.loan_balance) AS "Savings Balance",
		MAX(emergencyfundbalance.Balance) AS "Emergency Fund",
		COALESCE(MAX(spouse1retirement.loan_balance),0) AS "Spouse 1 Retirement",
		COALESCE(MAX(vanguardinvestments.ending_balance),0) AS "Vanguard Investments",
		COALESCE(MAX(spouse2retirement.Balance),0) AS "Spouse 2 Retirement",
		0 - COALESCE(MAX(spouse2carloan."Balance"),0) AS "Spouse 2 Car Loan",
		0 - COALESCE(MAX(studentloans.loan_balance), xxxxxx) AS "Student Loans",

		ROUND(AVG(posted_balance) 
			+ MAX(savingsaccount.loan_balance)
			- COALESCE(MAX(studentloans.loan_balance),xxxxx)
			+ COALESCE(MAX(spouse1retirement.loan_balance),0)
			+ COALESCE(MAX(vanguardinvestments.ending_balance),0)
			+ MAX(emergencyfundbalance.Balance)
			- COALESCE(MAX(spouse2carloan."Balance"),0)
			+ COALESCE(MAX(spouse2retirement.Balance),0)
			+ COALESCE(MAX(spouse2checking.balance),0)
		,2) AS "Net Worth"

		FROM spouse1checking

		FULL OUTER JOIN savingsaccount
		ON TO_CHAR(spouse1checking."Date", 'mm-yyyy')
				= TO_CHAR(savingsaccount."Date", 'mm-yyyy')

		FULL OUTER JOIN studentloans
		ON TO_CHAR(spouse1checking."Date", 'mm-yyyy')
				= TO_CHAR(studentloans."Date", 'mm-yyyy')

		FULL OUTER JOIN spouse1retirement
		ON TO_CHAR(spouse1checking."Date", 'mm-yyyy')
				= TO_CHAR(spouse1retirement."Date", 'mm-yyyy')

		FULL OUTER JOIN vanguardinvestments
		ON TO_CHAR(spouse1checking."Date", 'mm-yyyy')
				= TO_CHAR(vanguardinvestments."Date", 'mm-yyyy')

		FULL OUTER JOIN emergencyfundbalance
		ON TO_CHAR(spouse1checking."Date", 'mm-yyyy')
				= emergencyfundbalance."Date"

		FULL OUTER JOIN spouse2carloan
		ON TO_CHAR(spouse1checking."Date", 'mm-yyyy')
				= TO_CHAR(spouse2carloan."Date", 'mm-yyyy')

		FULL OUTER JOIN spouse2retirement
		ON TO_CHAR(spouse1checking."Date", 'mm-yyyy')
				= TO_CHAR(spouse2retirement."Date", 'mm-yyyy')

		FULL OUTER JOIN spouse2checking
		ON TO_CHAR(spouse1checking."Date", 'mm-yyyy')
				= TO_CHAR(spouse2checking."Date", 'mm-yyyy')

	GROUP BY TO_CHAR(spouse1checking."Date", 'mm-yyyy')
	ORDER BY TO_DATE(TO_CHAR(spouse1checking."Date", 'mm-yyyy'),'mm-yyyy');

------------------------------------------
-- SECTION 5 Present Positions Snap Shot (for table)
-- GOAL: Create a table in Tableau that simply displays the present amount of total cash, retirement, debt, and networth

	-- EXPORT:
	SELECT
		ROUND(AVG(spouse1checking.posted_balance))
		+ MAX(savingsaccount.loan_balance)
		+ COALESCE(MAX(vanguardinvestments.ending_balance),0)
		+ MAX(emergencyfundbalance.Balance) 
		+ COALESCE(MAX(spouse2checking.balance),0) AS "Total Cash",

		COALESCE(MAX(spouse1retirement.loan_balance),0)
		+ COALESCE(MAX(spouse2retirement.Balance),0) AS "Total Retirement",

		0 - (COALESCE(MAX(studentloans.loan_balance),xxxxxx)
		+ COALESCE(MAX(spouse2carloan."Balance"),0)) AS "Total Debt",

		ROUND(AVG(posted_balance) 
		+ MAX(savingsaccount.loan_balance)
		- COALESCE(MAX(studentloans.loan_balance),xxxxx)
		+ COALESCE(MAX(spouse1retirement.loan_balance),0)
		+ COALESCE(MAX(vanguardinvestments.ending_balance),0)
		+ MAX(emergencyfundbalance.Balance)
		- COALESCE(MAX(spouse2carloan."Balance"),0)
		+ COALESCE(MAX(spouse2retirement.Balance),0)
		+ COALESCE(MAX(spouse2checking.balance),0)
				,2) AS "Net Worth"

		FROM spouse1checking

		FULL OUTER JOIN savingsaccount
		ON TO_CHAR(spouse1checking."Date", 'mm-yyyy')
				= TO_CHAR(savingsaccount."Date", 'mm-yyyy')

		FULL OUTER JOIN studentloans
		ON TO_CHAR(spouse1checking."Date", 'mm-yyyy')
				= TO_CHAR(studentloans."Date", 'mm-yyyy')

		FULL OUTER JOIN spouse1retirement
		ON TO_CHAR(spouse1checking."Date", 'mm-yyyy')
				= TO_CHAR(spouse1retirement."Date", 'mm-yyyy')

		FULL OUTER JOIN vanguardinvestments
		ON TO_CHAR(spouse1checking."Date", 'mm-yyyy')
				= TO_CHAR(vanguardinvestments."Date", 'mm-yyyy')

		FULL OUTER JOIN emergencyfundbalance
		ON TO_CHAR(spouse1checking."Date", 'mm-yyyy')
				= emergencyfundbalance."Date"

		FULL OUTER JOIN spouse2carloan
		ON TO_CHAR(spouse1checking."Date", 'mm-yyyy')
				= TO_CHAR(spouse2carloan."Date", 'mm-yyyy')

		FULL OUTER JOIN spouse2retirement
		ON TO_CHAR(spouse1checking."Date", 'mm-yyyy')
				= TO_CHAR(spouse2retirement."Date", 'mm-yyyy')

		FULL OUTER JOIN spouse2checking
		ON TO_CHAR(spouse1checking."Date", 'mm-yyyy')
					= TO_CHAR(spouse2checking."Date", 'mm-yyyy')

	WHERE spouse1checking."Date" >= date_trunc('month', current_date - interval '1' month)
		AND spouse1checking."Date" < date_trunc('month', current_date)

	GROUP BY TO_CHAR(spouse1checking."Date", 'mm-yyyy')
	ORDER BY TO_DATE(TO_CHAR(spouse1checking."Date", 'mm-yyyy'),'mm-yyyy');
	


		


